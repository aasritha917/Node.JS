use orders
switched to db orders
show collections
db.createCollection("orders")
{ ok: 1 }
db.orders.insertOne({
    "order_id": 1,
    "customer_name": "John Doe",
    "items": ["Laptop", "Mouse"],
    "total_amount": 65000,
    "order_status": "pending"
  })
{
  acknowledged: true,
  insertedId: ObjectId('685ccc653d333ad73a3b52d0')
}
db.orders.insertMany({
    "order_id": 2,
    "customer_name": "Jane Smith",
    "items": ["Headphones", "Charger"],
    "total_amount": 3000,
    "order_status": "shipped"
  },
  {
    "order_id": 3,
    "customer_name": "Alice Johnson",
    "items": ["Mobile Phone"],
    "total_amount": 20000,
    "order_status": "delivered"
  },
  {
    "order_id": 4,
    "customer_name": "Bob Brown",
    "items": ["Tablet", "Keyboard"],
    "total_amount": 15000,
    "order_status": "pending"
  },
  {
    "order_id": 5,
    "customer_name": "Chris Green",
    "items": ["Smartwatch"],
    "total_amount": 7000,
    "order_status": "shipped"
  })
MongoInvalidArgumentError: Argument "docs" must be an array of documents
db.orders.insertMany([{
    "order_id": 2,
    "customer_name": "Jane Smith",
    "items": ["Headphones", "Charger"],
    "total_amount": 3000,
    "order_status": "shipped"
  },
  {
    "order_id": 3,
    "customer_name": "Alice Johnson",
    "items": ["Mobile Phone"],
    "total_amount": 20000,
    "order_status": "delivered"
  },
  {
    "order_id": 4,
    "customer_name": "Bob Brown",
    "items": ["Tablet", "Keyboard"],
    "total_amount": 15000,
    "order_status": "pending"
  },
  {
    "order_id": 5,
    "customer_name": "Chris Green",
    "items": ["Smartwatch"],
    "total_amount": 7000,
    "order_status": "shipped"
  }])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('685ccca63d333ad73a3b52d1'),
    '1': ObjectId('685ccca63d333ad73a3b52d2'),
    '2': ObjectId('685ccca63d333ad73a3b52d3'),
    '3': ObjectId('685ccca63d333ad73a3b52d4')
  }
}
db.orders.find({"order_status": "shipped"})
{
  _id: ObjectId('685ccca63d333ad73a3b52d1'),
  order_id: 2,
  customer_name: 'Jane Smith',
  items: [
    'Headphones',
    'Charger'
  ],
  total_amount: 3000,
  order_status: 'shipped'
}
{
  _id: ObjectId('685ccca63d333ad73a3b52d4'),
  order_id: 5,
  customer_name: 'Chris Green',
  items: [
    'Smartwatch'
  ],
  total_amount: 7000,
  order_status: 'shipped'
}
db.orders.updateOne({"order_id": 1},{$set:{"total_amount": 70000}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
db.orders.deleteOne({"order_id": 4})
{
  acknowledged: true,
  deletedCount: 1
}
db.orders.findOne({"customer_name": "Alice Johnson"})
{
  _id: ObjectId('685ccca63d333ad73a3b52d2'),
  order_id: 3,
  customer_name: 'Alice Johnson',
  items: [
    'Mobile Phone'
  ],
  total_amount: 20000,
  order_status: 'delivered'
}
db.orders.updateOne({"order_id": 2},{$set:{"order_status": "delivered"}})
